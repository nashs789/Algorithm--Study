/**
 *  "명예의 전당"이라는 TV 프로그램에서는 매일 1명의 가수가 노래를 부르고, 시청자들의 문자 투표수로 가수에게 점수를 부여합니다.
 *  매일 출연한 가수의 점수가 지금까지 출연 가수들의 점수 중 상위 k번째 이내이면 해당 가수의 점수를 명예의 전당이라는 목록에 올려 기념합니다.
 *  즉 프로그램 시작 이후 초기에 k일까지는 모든 출연 가수의 점수가 명예의 전당에 오르게 됩니다.
 *  k일 다음부터는 출연 가수의 점수가 기존의 명예의 전당 목록의 k번째 순위의 가수 점수보다 더 높으면, 출연 가수의 점수가 명예의 전당에 오르게 되고 기존의 k번째 순위의 점수는 명예의 전당에서 내려오게 됩니다.
 *
 *  이 프로그램에서는 매일 "명예의 전당"의 최하위 점수를 발표합니다.
 *  예를 들어, k = 3이고, 7일 동안 진행된 가수의 점수가 [10, 100, 20, 150, 1, 100, 200]이라면, 명예의 전당에서 발표된 점수는 아래의 그림과 같이 [10, 10, 10, 20, 20, 100, 100]입니다.
 *
 *  일차        1      2       3       4       5       6       7
 *  score     10     100     20      150      1      100     200
 *  명예의전당   10     100    100      150     150     150     200
 *  (k = 3)           10     20      100     100     100     150
 *                           10       20      20     100     100
 *  발표점수    10      10     10       20      20     100     100
 *
 *  명예의 전당 목록의 점수의 개수 k, 1일부터 마지막 날까지 출연한 가수들의 점수인 score 가 주어졌을 때, 매일 발표된 명예의 전당의 최하위 점수를 return하는 solution 함수를 완성해주세요.
 *
 * [ 제한사항 ]
 * 3 ≤ k ≤ 100
 * 7 ≤ score의 길이 ≤ 1,000
 * 0 ≤ score[i] ≤ 2,000
 *
 * [ 입출력 예 ]
 * k	score	                                            result
 * 3	[10, 100, 20, 150, 1, 100, 200]	                    [10, 10, 10, 20, 20, 100, 100]
 * 4	[0, 300, 40, 300, 20, 70, 150, 50, 500, 1000]	    [0, 0, 0, 0, 20, 40, 70, 70, 150, 300]
 *
 * [ 입출력 예 #1 ]
 * 아래와 같이, [0, 0, 0, 0, 20, 40, 70, 70, 150, 300]을 return 합니다.
 *
 *  일차        1      2       3       4       5       6       7      8       9       10
 *  score     0     300      40      300     20      70      150    50      500     1000
 *  명예의전당   0     300     300      300    300     300      300   300      500     1000
 *  (k = 4)           0      40      300    300     300      300   300      300      500
 *                            0       40     40      70      150   150      300      300
 *                                     0     20      40       70    70      150      300
 *  발표점수    0       0       0        0     20      40        70    70     150       300
 */

package Lv1;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;

public class Q2_TheHallOfFame {
    public static void main(String[] args) {
        // 0, 300, 40, 300, 20, 70, 150, 50, 500, 1000
        int[] scoreArr = {10, 100, 20, 150, 1, 100, 200};
        int[] returnArr = new int[scoreArr.length];
        List<Integer> hall = new ArrayList();
        int k = 3;

        for(int idx = 0; idx < scoreArr.length; idx++){
            hall.add(scoreArr[idx]);
            hall.sort(Comparator.naturalOrder());

            if(k <= idx) {
                hall.remove(0);
            }

            returnArr[idx] = hall.get(0);
        }
        Arrays.stream(returnArr).forEach(x -> System.out.print(x + " "));
    }
}
